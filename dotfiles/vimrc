runtime macros/matchit.vim
syntax on
scriptencoding utf-8
set encoding=utf-8
set nocompatible
set autoread
if has("autocmd")
  filetype indent plugin on
endif

call plug#begin('~/.local/share/nvim/plugged')
Plug '/usr/local/opt/fzf'
Plug 'junegunn/fzf.vim'
Plug 'hrvladev/quill'
Plug 'kchmck/vim-coffee-script'
Plug 'slim-template/vim-slim'
Plug 'janko-m/vim-test'
Plug 'Yggdroot/indentLine'
Plug 'kana/vim-textobj-user'
Plug 'nelstrom/vim-textobj-rubyblock'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'AndrewRadev/writable_search.vim'
Plug 'scrooloose/nerdtree'
Plug 'ap/vim-css-color'
Plug 'Valloric/YouCompleteMe', { 'do': './install.py' }
call plug#end()

" Mapping
let mapleader      = "\<Space>"
let maplocalleader = "\<Space>"

" Rspec
let test#strategy          = "neovim"
let g:test#preserve_screen = 1

" Indent
" let g:indentLine_showFirstIndentLevel = 1
let g:indentLine_char = '│'
let g:indentLine_first_char = '│'

" Escaping
inoremap jk <Esc>
cnoremap jk <C-c>

" Keys for normal mode
nnoremap <silent> <leader>q :q<CR>
nnoremap <silent> <leader>s :update<CR>
nnoremap <silent> <leader>t :Files<CR>
nnoremap <silent> <leader>b :Buffers<CR>
nnoremap <silent> t<C-t> :TestNearest<CR>
nnoremap <silent> t<C-f> :TestFile<CR>
nnoremap <silent> t<C-l> :TestLast<CR>
nnoremap <silent> t<C-v> :TestVisit<CR>
nnoremap <Leader>c :nohlsearch<CR>
nnoremap <C-k> :m-2<CR>
nnoremap <C-j> :m+1<CR>

" Keys for visual mode
vnoremap <Leader>f y:Ag\V<C-r>=escape(@",'/\')<CR><CR>

set splitright
set splitbelow
set termguicolors
set tabstop=2
set softtabstop=0
set shiftwidth=2
set expandtab
set smarttab
set number

" Remove trailing spaces on save (oh yeah)
autocmd BufWritePre * :%s/\s\+$//e

" Threat jst like html
au BufNewFile,BufRead *.ejs set filetype=html

" highlight tabs and trailing spaces
set listchars=tab:\|\
set list

colorscheme quill
highlight Pmenu ctermfg=2 ctermbg=3 guifg=#ffffff guibg=#323742

